{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Webapp\\\\dongphuchoatoc\\\\front-end\\\\src\\\\Component\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport \"./Login.css\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [user_name, setUsername] = useState();\n  const [passwords, setPassword] = useState();\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3030/api/usermanager/login', {\n        user_name,\n        passwords\n      }, {\n        withCredentials: true\n      });\n      navigate('/');\n    } catch (error) {\n      navigate('/login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: user_name,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: passwords,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"lvSyQ7zjLdWxHvRkjHysDA1BXLA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useNavigate","useState","axios","jsxDEV","_jsxDEV","Login","_s","user_name","setUsername","passwords","setPassword","navigate","handleLogin","e","preventDefault","response","post","withCredentials","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Code/Webapp/dongphuchoatoc/front-end/src/Component/Login/Login.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom'\r\nimport \"./Login.css\"\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nfunction Login(){\r\n    const[user_name,setUsername] = useState()\r\n    const[passwords,setPassword] = useState()\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:3030/api/usermanager/login', \r\n                { \r\n                    user_name, \r\n                    passwords \r\n                },\r\n                {withCredentials :true}\r\n            );\r\n            navigate('/');\r\n        } catch (error) {\r\n            navigate('/login')\r\n        }\r\n    };\r\n    return (\r\n        <div className='Container'>\r\n           <div >\r\n            <h1>Login</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={user_name}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={passwords}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n            />\r\n            <button onClick={handleLogin}>Login</button>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Login"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAK,CAACC,SAAS,EAACC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC;EACzC,MAAK,CAACQ,SAAS,EAACC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACzC,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,6CAA6C,EAC3E;QACIT,SAAS;QACTE;MACJ,CAAC,EACD;QAACQ,eAAe,EAAE;MAAI,CAC1B,CAAC;MACDN,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZP,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC;EACD,oBACIP,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,eACvBhB,OAAA;MAAAgB,QAAA,gBACChB,OAAA;QAAAgB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdpB,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEpB,SAAU;QACjBqB,QAAQ,EAAGf,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFpB,OAAA;QACIqB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAElB,SAAU;QACjBmB,QAAQ,EAAGf,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFpB,OAAA;QAAQ2B,OAAO,EAAEnB,WAAY;QAAAQ,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd;AAAClB,EAAA,CA3CQD,KAAK;EAAA,QAGOL,WAAW;AAAA;AAAAgC,EAAA,GAHvB3B,KAAK;AA4Cd,eAAeA,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}